/*
 * This file is autogenerated.
 */
package org.anarres.ipmi.protocol.client.visitor;

import javax.annotation.Nonnull;

import org.anarres.ipmi.protocol.client.IpmiEndpoint;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiCommand;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.IpmiResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.global.GetDeviceIdRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.global.GetDeviceIdResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelAuthenticationCapabilitiesRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelAuthenticationCapabilitiesResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.SetSessionPrivilegeLevelRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.SetSessionPrivilegeLevelResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.CloseSessionRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.CloseSessionResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelAccessRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelAccessResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelCipherSuitesRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.messaging.GetChannelCipherSuitesResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetChassisCapabilitiesRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetChassisCapabilitiesResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetChassisStatusRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetChassisStatusResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.ChassisControlRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.ChassisControlResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetSystemRestartCauseRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.chassis.GetSystemRestartCauseResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sensor.GetSensorThresholdRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sensor.GetSensorThresholdResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sensor.GetSensorReadingRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sensor.GetSensorReadingResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.fru.GetFRUInventoryAreaInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.fru.GetFRUInventoryAreaInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.fru.ReadFRUDataRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.fru.ReadFRUDataResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.GetSDRRepositoryInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.GetSDRRepositoryInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.ReserveSDRRepositoryRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.ReserveSDRRepositoryResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.GetSDRRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sdr.GetSDRResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sel.GetSELInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sel.GetSELInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sel.GetSELAllocationInfoRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sel.GetSELAllocationInfoResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.lan.GetLANConfigurationParametersRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.lan.GetLANConfigurationParametersResponse;
import org.anarres.ipmi.protocol.packet.ipmi.command.sol.GetSOLConfigurationParametersRequest;
import org.anarres.ipmi.protocol.packet.ipmi.command.sol.GetSOLConfigurationParametersResponse;

/**
 * Autogenerated visitor handler for {@link IpmiCommand} subclasses.
 *
 * @author shevek
 */
public interface IpmiClientIpmiCommandHandler {


    public static class Adapter implements IpmiClientIpmiCommandHandler {

        public void handleDefault(@Nonnull IpmiEndpoint context, @Nonnull IpmiCommand command) {
        }

        public void handleRequest(@Nonnull IpmiEndpoint context, @Nonnull IpmiRequest request) {
            handleDefault(context, request);
        }

        public void handleResponse(@Nonnull IpmiEndpoint context, @Nonnull IpmiResponse response) {
            handleDefault(context, response);
        }

        @Override
        public void handleGetDeviceIdRequest(IpmiEndpoint context, GetDeviceIdRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetDeviceIdResponse(IpmiEndpoint context, GetDeviceIdResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetChannelAuthenticationCapabilitiesRequest(IpmiEndpoint context, GetChannelAuthenticationCapabilitiesRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetChannelAuthenticationCapabilitiesResponse(IpmiEndpoint context, GetChannelAuthenticationCapabilitiesResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleSetSessionPrivilegeLevelRequest(IpmiEndpoint context, SetSessionPrivilegeLevelRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleSetSessionPrivilegeLevelResponse(IpmiEndpoint context, SetSessionPrivilegeLevelResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleCloseSessionRequest(IpmiEndpoint context, CloseSessionRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleCloseSessionResponse(IpmiEndpoint context, CloseSessionResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetChannelAccessRequest(IpmiEndpoint context, GetChannelAccessRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetChannelAccessResponse(IpmiEndpoint context, GetChannelAccessResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetChannelInfoRequest(IpmiEndpoint context, GetChannelInfoRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetChannelInfoResponse(IpmiEndpoint context, GetChannelInfoResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetChannelCipherSuitesRequest(IpmiEndpoint context, GetChannelCipherSuitesRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetChannelCipherSuitesResponse(IpmiEndpoint context, GetChannelCipherSuitesResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetChassisCapabilitiesRequest(IpmiEndpoint context, GetChassisCapabilitiesRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetChassisCapabilitiesResponse(IpmiEndpoint context, GetChassisCapabilitiesResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetChassisStatusRequest(IpmiEndpoint context, GetChassisStatusRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetChassisStatusResponse(IpmiEndpoint context, GetChassisStatusResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleChassisControlRequest(IpmiEndpoint context, ChassisControlRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleChassisControlResponse(IpmiEndpoint context, ChassisControlResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetSystemRestartCauseRequest(IpmiEndpoint context, GetSystemRestartCauseRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetSystemRestartCauseResponse(IpmiEndpoint context, GetSystemRestartCauseResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetSensorThresholdRequest(IpmiEndpoint context, GetSensorThresholdRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetSensorThresholdResponse(IpmiEndpoint context, GetSensorThresholdResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetSensorReadingRequest(IpmiEndpoint context, GetSensorReadingRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetSensorReadingResponse(IpmiEndpoint context, GetSensorReadingResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetFRUInventoryAreaInfoRequest(IpmiEndpoint context, GetFRUInventoryAreaInfoRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetFRUInventoryAreaInfoResponse(IpmiEndpoint context, GetFRUInventoryAreaInfoResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleReadFRUDataRequest(IpmiEndpoint context, ReadFRUDataRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleReadFRUDataResponse(IpmiEndpoint context, ReadFRUDataResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetSDRRepositoryInfoRequest(IpmiEndpoint context, GetSDRRepositoryInfoRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetSDRRepositoryInfoResponse(IpmiEndpoint context, GetSDRRepositoryInfoResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleReserveSDRRepositoryRequest(IpmiEndpoint context, ReserveSDRRepositoryRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleReserveSDRRepositoryResponse(IpmiEndpoint context, ReserveSDRRepositoryResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetSDRRequest(IpmiEndpoint context, GetSDRRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetSDRResponse(IpmiEndpoint context, GetSDRResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetSELInfoRequest(IpmiEndpoint context, GetSELInfoRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetSELInfoResponse(IpmiEndpoint context, GetSELInfoResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetSELAllocationInfoRequest(IpmiEndpoint context, GetSELAllocationInfoRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetSELAllocationInfoResponse(IpmiEndpoint context, GetSELAllocationInfoResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetLANConfigurationParametersRequest(IpmiEndpoint context, GetLANConfigurationParametersRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetLANConfigurationParametersResponse(IpmiEndpoint context, GetLANConfigurationParametersResponse response) {
            handleResponse(context, response);
        }

        @Override
        public void handleGetSOLConfigurationParametersRequest(IpmiEndpoint context, GetSOLConfigurationParametersRequest request) {
            handleRequest(context, request);
        }

        @Override
        public void handleGetSOLConfigurationParametersResponse(IpmiEndpoint context, GetSOLConfigurationParametersResponse response) {
            handleResponse(context, response);
        }
    }

    public void handleGetDeviceIdRequest(@Nonnull IpmiEndpoint context, @Nonnull GetDeviceIdRequest request);

    public void handleGetDeviceIdResponse(@Nonnull IpmiEndpoint context, @Nonnull GetDeviceIdResponse response);

    public void handleGetChannelAuthenticationCapabilitiesRequest(@Nonnull IpmiEndpoint context, @Nonnull GetChannelAuthenticationCapabilitiesRequest request);

    public void handleGetChannelAuthenticationCapabilitiesResponse(@Nonnull IpmiEndpoint context, @Nonnull GetChannelAuthenticationCapabilitiesResponse response);

    public void handleSetSessionPrivilegeLevelRequest(@Nonnull IpmiEndpoint context, @Nonnull SetSessionPrivilegeLevelRequest request);

    public void handleSetSessionPrivilegeLevelResponse(@Nonnull IpmiEndpoint context, @Nonnull SetSessionPrivilegeLevelResponse response);

    public void handleCloseSessionRequest(@Nonnull IpmiEndpoint context, @Nonnull CloseSessionRequest request);

    public void handleCloseSessionResponse(@Nonnull IpmiEndpoint context, @Nonnull CloseSessionResponse response);

    public void handleGetChannelAccessRequest(@Nonnull IpmiEndpoint context, @Nonnull GetChannelAccessRequest request);

    public void handleGetChannelAccessResponse(@Nonnull IpmiEndpoint context, @Nonnull GetChannelAccessResponse response);

    public void handleGetChannelInfoRequest(@Nonnull IpmiEndpoint context, @Nonnull GetChannelInfoRequest request);

    public void handleGetChannelInfoResponse(@Nonnull IpmiEndpoint context, @Nonnull GetChannelInfoResponse response);

    public void handleGetChannelCipherSuitesRequest(@Nonnull IpmiEndpoint context, @Nonnull GetChannelCipherSuitesRequest request);

    public void handleGetChannelCipherSuitesResponse(@Nonnull IpmiEndpoint context, @Nonnull GetChannelCipherSuitesResponse response);

    public void handleGetChassisCapabilitiesRequest(@Nonnull IpmiEndpoint context, @Nonnull GetChassisCapabilitiesRequest request);

    public void handleGetChassisCapabilitiesResponse(@Nonnull IpmiEndpoint context, @Nonnull GetChassisCapabilitiesResponse response);

    public void handleGetChassisStatusRequest(@Nonnull IpmiEndpoint context, @Nonnull GetChassisStatusRequest request);

    public void handleGetChassisStatusResponse(@Nonnull IpmiEndpoint context, @Nonnull GetChassisStatusResponse response);

    public void handleChassisControlRequest(@Nonnull IpmiEndpoint context, @Nonnull ChassisControlRequest request);

    public void handleChassisControlResponse(@Nonnull IpmiEndpoint context, @Nonnull ChassisControlResponse response);

    public void handleGetSystemRestartCauseRequest(@Nonnull IpmiEndpoint context, @Nonnull GetSystemRestartCauseRequest request);

    public void handleGetSystemRestartCauseResponse(@Nonnull IpmiEndpoint context, @Nonnull GetSystemRestartCauseResponse response);

    public void handleGetSensorThresholdRequest(@Nonnull IpmiEndpoint context, @Nonnull GetSensorThresholdRequest request);

    public void handleGetSensorThresholdResponse(@Nonnull IpmiEndpoint context, @Nonnull GetSensorThresholdResponse response);

    public void handleGetSensorReadingRequest(@Nonnull IpmiEndpoint context, @Nonnull GetSensorReadingRequest request);

    public void handleGetSensorReadingResponse(@Nonnull IpmiEndpoint context, @Nonnull GetSensorReadingResponse response);

    public void handleGetFRUInventoryAreaInfoRequest(@Nonnull IpmiEndpoint context, @Nonnull GetFRUInventoryAreaInfoRequest request);

    public void handleGetFRUInventoryAreaInfoResponse(@Nonnull IpmiEndpoint context, @Nonnull GetFRUInventoryAreaInfoResponse response);

    public void handleReadFRUDataRequest(@Nonnull IpmiEndpoint context, @Nonnull ReadFRUDataRequest request);

    public void handleReadFRUDataResponse(@Nonnull IpmiEndpoint context, @Nonnull ReadFRUDataResponse response);

    public void handleGetSDRRepositoryInfoRequest(@Nonnull IpmiEndpoint context, @Nonnull GetSDRRepositoryInfoRequest request);

    public void handleGetSDRRepositoryInfoResponse(@Nonnull IpmiEndpoint context, @Nonnull GetSDRRepositoryInfoResponse response);

    public void handleReserveSDRRepositoryRequest(@Nonnull IpmiEndpoint context, @Nonnull ReserveSDRRepositoryRequest request);

    public void handleReserveSDRRepositoryResponse(@Nonnull IpmiEndpoint context, @Nonnull ReserveSDRRepositoryResponse response);

    public void handleGetSDRRequest(@Nonnull IpmiEndpoint context, @Nonnull GetSDRRequest request);

    public void handleGetSDRResponse(@Nonnull IpmiEndpoint context, @Nonnull GetSDRResponse response);

    public void handleGetSELInfoRequest(@Nonnull IpmiEndpoint context, @Nonnull GetSELInfoRequest request);

    public void handleGetSELInfoResponse(@Nonnull IpmiEndpoint context, @Nonnull GetSELInfoResponse response);

    public void handleGetSELAllocationInfoRequest(@Nonnull IpmiEndpoint context, @Nonnull GetSELAllocationInfoRequest request);

    public void handleGetSELAllocationInfoResponse(@Nonnull IpmiEndpoint context, @Nonnull GetSELAllocationInfoResponse response);

    public void handleGetLANConfigurationParametersRequest(@Nonnull IpmiEndpoint context, @Nonnull GetLANConfigurationParametersRequest request);

    public void handleGetLANConfigurationParametersResponse(@Nonnull IpmiEndpoint context, @Nonnull GetLANConfigurationParametersResponse response);

    public void handleGetSOLConfigurationParametersRequest(@Nonnull IpmiEndpoint context, @Nonnull GetSOLConfigurationParametersRequest request);

    public void handleGetSOLConfigurationParametersResponse(@Nonnull IpmiEndpoint context, @Nonnull GetSOLConfigurationParametersResponse response);
}
